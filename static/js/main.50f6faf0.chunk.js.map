{"version":3,"sources":["components/assets/noPosterSmall.png","components/Section.js","components/Loader.js","components/Message.js","components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","components/Header/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Containter","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainter","_templateObject4","_templateObject5","Year","_templateObject6","Poster","_this$props","this","id","imageUrl","rating","year","isMovie","react_router_dom","to","concat","Poster_Containter","require","Poster_Title","length","substring","Component","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","components_Section","map","movie","components_Poster","key","poster_path","original_title","vote_average","release_date","components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","setState","_this$state","Home_HomePresenter","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","tv","original_name","substing","TVContainer","TV_TVPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Link","Header_templateObject4","withRouter","pathname","location","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","e","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","substr","first_air_date","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Router","Header_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.50f6faf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            ⏰\n        </span>\n    </Container>\n)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Containter = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n    <Containter>\n        <Text color={color}>{text}</Text>\n    </Containter>\n)\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Containter = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 200px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position:  absolute;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainter = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\n\nclass Poster extends Component {\n    render() {\n        const { id, imageUrl, title, rating, year, isMovie } = this.props;\n        return (\n            <Link to={ isMovie ? `/movie/${id}` : `/show/${id}` }>\n                <Containter>\n                    <ImageContainter>\n                        <Image bgUrl={\n                            imageUrl\n                            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                            : require('./assets/noPosterSmall.png')\n                        } />\n                        <Rating>\n                            <span role=\"img\" aria-label=\"rating\">⭐</span>\n                            {\"  \"}\n                            {rating}/10\n                        </Rating>\n                        <Title>\n                            {title.length > 18 ? `${title.substring(0,18)}...` : title}\n                        </Title>\n                        <Year>{year}</Year>\n                    </ImageContainter>\n                </Containter>\n            </Link>\n        )\n    }\n}\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool,\n}\n\nexport default Poster;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\n\nimport Section from '../../components/Section';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport Poster from '../../components/Poster';\n\nconst Container = styled.div`\n    padding: 0px 10px;\n`;\n\nclass HomePresenter extends Component {\n    render() {\n        const { nowPlaying, popular, upcoming, loading, error } = this.props;   \n        return (\n            <>\n                <Helmet>\n                    <title>Movies | Nomfix</title>\n                </Helmet>\n                {loading ? (\n                    <Loader />\n                ) : (\n                    <Container>\n                        <Helmet>\n                            <title>Movies | Nomflix</title>\n                        </Helmet>\n                        {nowPlaying && nowPlaying.length > 0 && (\n                            <Section title=\"Now Playing\">\n                                {nowPlaying.map(movie => (\n                                    <Poster\n                                        key={movie.id}\n                                        id={movie.id}\n                                        imageUrl={movie.poster_path}\n                                        title={movie.original_title}\n                                        rating={movie.vote_average}\n                                        year={movie.release_date.substring(0, 4)}\n                                        isMovie={true}\n                                    />\n                                ))}\n                            </Section>\n                        )}\n                        {upcoming && upcoming.length > 0 && (\n                            <Section title=\"Upcoming Movies\">\n                                {upcoming.map(movie => (\n                                    <Poster\n                                        key={movie.id}\n                                        id={movie.id}\n                                        imageUrl={movie.poster_path}\n                                        title={movie.original_title}\n                                        rating={movie.vote_average}\n                                        year={movie.release_date.substring(0, 4)}\n                                        isMovie={true}\n                                    />\n                                ))}\n                            </Section>\n                        )}\n                        {popular && popular.length > 0 && (\n                            <Section title=\"Popular Movies\">\n                                {popular.map(movie => (\n                                    <Poster\n                                        key={movie.id}\n                                        id={movie.id}\n                                        imageUrl={movie.poster_path}\n                                        title={movie.original_title}\n                                        rating={movie.vote_average}\n                                        year={movie.release_date.substring(0, 4)}\n                                        isMovie={true}\n                                    />\n                                ))}\n                            </Section>\n                        )}\n                        {error && <Message color=\"#e74c3c\" text={error} />}\n                    </Container>\n                )}\n            </>\n        )\n    }\n}\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcomfing: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"ae61da0a1b03db56e103056851b7e551\",\n        language: \"en-US\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id =>\n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n}\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id =>\n        api.get(`tv/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n}\n\nexport default api;","import HomeContainer from './HomeContainer';\nexport default HomeContainer;","import React, { Component } from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from '../../api';\n\nexport default class HomeContainer extends Component {\n\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: null\n    }\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: nowPlaying }\n            } = await moviesApi.nowPlaying();\n            const {\n                data: { results: upcoming }\n            } = await moviesApi.upcoming();\n            const {\n                data: { results: popular }\n            } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n        }catch{\n            this.setState({\n                error: \"Can't find movies information.\"\n            })\n        }finally{\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\n\nimport Section from '../../components/Section';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport Poster from '../../components/Poster';\n\nconst Container = styled.div`\n    padding: 0px 10px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <>\n        <Helmet>\n            <title>Movies | Nomfix</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n            <Container>\n                <Helmet>\n                    <title>Movies | Nomfix</title>\n                </Helmet>\n                {topRated && topRated.length > 0 && (\n                    <Section title=\"TopRated\">\n                        { topRated.map(tv => (\n                            <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                imageUrl={tv.poster_path}\n                                title={tv.original_name}\n                                rating={tv.vote_average}\n                                year={tv.release_date.substing(0,4)}\n                                isMovie={false}\n                            />\n                        ))}\n                    </Section>\n                )}\n\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular TV\">\n                        { popular.map(tv => (\n                            <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                imageUrl={tv.poster_path}\n                                title={tv.original_name}\n                                rating={tv.vote_average}\n                                year={tv.release_date.substing(0,4)}\n                                isMovie={false}\n                            />\n                        ))}\n                    </Section>\n                )}\n\n                {airingToday && airingToday.length > 0 && (\n                    <Section title=\"AiringToday TV\">\n                        { airingToday.map(tv => (\n                            <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                imageUrl={tv.poster_path}\n                                title={tv.original_name}\n                                rating={tv.vote_average}\n                                year={tv.release_date.substing(0,4)}\n                                isMovie={false}\n                            />\n                        ))}\n                    </Section>\n                )}\n                { error && <Message color=\"#e74c3c\" text={error} /> }\n            </Container>\n        )}\n    </>\n);\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from './TVContainer';\nexport default TVContainer;","import React, { Component } from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from '../../api';\n\nexport default class extends Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: null\n    }\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: topRated }\n            } = await tvApi.topRated();\n            const {\n                data: { results: popular }\n            } = await tvApi.popular();\n            const {\n                data: { results: airingToday }\n            } = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n        }catch{\n            this.setState({\n                error: \"Can't find movies information.\"\n            })\n        }finally{\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    redner() {\n        const { topRated, popular, airingToday, error, loading } = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20,20,20,0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justfy-content: center;\n`;\n\nexport default withRouter(({ location: {pathname} }) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Section from '../../components/Section';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport Poster from '../../components/Poster';\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    widhth: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, loading, error, handleSubmit, updateTerm }) => (\n    <Container>\n        <Form onSubmit={handleSubmit}>\n            <Input\n                placeholder=\"Search Movies or TV Shows...\"\n                value={searchTerm}\n                onChange={updateTerm}\n            />\n        </Form>\n\n        {loading ? (\n            <Loader />\n        ) : (\n            <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"Movie Results\">\n                        {movieResults.map(movie => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substing(0,4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV Results\">\n                        {tvResults.map(tv => (\n                            <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                imageUrl={tv.poster_path}\n                                title={tv.original_name}\n                                rating={tv.vote_average}\n                                year={tv.release_date.substing(0,4)}\n                                isMovie={false}\n                            />\n                        ))}\n                    </Section>\n                )}\n            </>\n        )}\n        { error && <Message color=\"#e74c3c\" text={error} /> }\n        {tvResults && movieResults && tvResults.length === 0 && movieResults === 0 && (\n            <Message color=\"#95a5a6\" text=\"Nothing found\" />\n        )}\n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\nexport default SearchContainer;","import React, { Component } from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: null\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\"){\n            this.searchByTerm();\n        }\n    }\n\n    updateTerm = e => {\n        const {\n            target: { value }\n        } = e;\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({loading: true});\n\n        try{\n            const{\n                data: { results: movieResults }\n            } = await moviesApi.search(searchTerm);\n            const{\n                data: { results: tvResults }\n            } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        }catch{\n            this.setState({ error: \"Can't find results...\" });\n        }finally{\n            this.setState({ loading: false });\n        }\n    }\n\n    redner() {\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from '../../components/Loader';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-postion: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background0-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.div`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.div``;\n\nconst Divider = styled.div`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n    loading ? (\n        <>\n            <Helmet>\n                <title>Loading | Nomflix</title>\n            </Helmet>\n            <Loader />\n        </>\n    ) : (\n        <Container>\n            <Helmet>\n                <title>\n                    {result.original_title ? result.original_title : result.original_name}{\" \"}\n                </title>\n            </Helmet>\n            <Backdrop\n                bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n            />\n            <Content>\n                <Cover\n                    bgImage={\n                        result.poster_path\n                            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                            : require(\"../../components/assets/noPosterSmall.png\")\n                    }\n                />\n                <Data>\n                    <Title>\n                        {\n                            result.original_title\n                            ? result.original_title\n                            : result.original_name\n                        }\n                    </Title>\n                    <ItemContainer>\n                        <Item>\n                            {\n                                result.release_date\n                                    ? result.release_date.substr(0,4)\n                                    : result.first_air_date.substr(0,4)\n                            }\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {result.runtime ? result.runtime : result.episode_run_time[0]} min\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {result.genres &&\n                                result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n                            )}\n                        </Item>\n                    </ItemContainer>\n                    <Overview>{result.overview}</Overview>\n                </Data>\n            </Content>\n        </Container>\n    );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\nexport default DetailContainer;","import React, { Component } from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends Component {\n\n    constructor(props){\n        super(props);\n        const {\n            location: { pathname }\n        } = props;\n\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        }\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id }\n            },\n            history: { push }\n        } = this.props;\n\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n\n        if(isNaN(parsedId)){\n            return push(\"/\");\n        }\n\n        let result = null;\n\n        try {\n            if (isMovie) {\n                // const request = await moviesApi.movieDetail(parsedId);\n                // result = request.data;\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            }else{\n                // const request = await tvApi.showDetail(parsedId);\n                // result = request.data;\n                ({ data: result } = await tvApi.showDetail(parsedId));\n            }\n        }catch{\n            this.setState({ error: \"Can't find anything...\" });\n        }finally{\n            this.setState({ loading: false, result });\n        }\n    }\n\n    redner() {\n        const { result, error, loading } = this.state;\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n    Switch\n} from \"react-router-dom\";\nimport Home from '../Routes/Home';\nimport TV from '../Routes/TV';\nimport Header from './Header/Header';\nimport Search from '../Routes/Search';\nimport Detail from '../Routes/Detail';\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" component={TV} />\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n)","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from 'react';\nimport Router from \"./Router\";\nimport GlobalStyles from './GlobalStyles';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}